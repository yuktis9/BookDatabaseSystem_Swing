/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookClientGui.GUI;

import bookClientGui.JtableModel.MaintainDataTableModel;
import bookClientGui.db.QueryData;
import bookClientGui.util.GUIUtil;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author dheeraj
 */
public class MaintainDataJpanel extends javax.swing.JPanel {

    /**
     * Creates new form MaintainDataJpanel2
     */
    String tableNames [];
    QueryData queryData;
    public MaintainDataJpanel() {
        
        queryData = new QueryData();
        tableNames = queryData.getTableName();
        
        initComponents();
        tableContentJtable.setAutoCreateRowSorter(true);
        tableContentJtable.setAutoCreateRowSorter(true);
        showDataCountJlabel.setVisible(false);
        tableContentJpanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        selectTableJcomboBox = new javax.swing.JComboBox();
        showDataCountJlabel = new javax.swing.JLabel();
        tableContentJpanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableContentJtable = new javax.swing.JTable();
        deleteRecordsJbutton = new javax.swing.JButton();
        selectAllRowsJbutton = new javax.swing.JButton();
        deselectAllRowsJbutton = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        jLabel1.setText("Select Table: ");

        selectTableJcomboBox.setModel(new javax.swing.DefaultComboBoxModel(tableNames));
        selectTableJcomboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectTableJcomboBoxActionPerformed(evt);
            }
        });

        showDataCountJlabel.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        showDataCountJlabel.setForeground(new java.awt.Color(51, 102, 255));

        tableContentJtable.setModel(new MaintainDataTableModel(
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            },
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            }

        ));
        jScrollPane1.setViewportView(tableContentJtable);

        deleteRecordsJbutton.setText("Delete Selected");
        deleteRecordsJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordsJbuttonActionPerformed(evt);
            }
        });

        selectAllRowsJbutton.setText("Select All");
        selectAllRowsJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllRowsJbuttonActionPerformed(evt);
            }
        });

        deselectAllRowsJbutton.setText("Deselect All");
        deselectAllRowsJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deselectAllRowsJbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tableContentJpanelLayout = new javax.swing.GroupLayout(tableContentJpanel);
        tableContentJpanel.setLayout(tableContentJpanelLayout);
        tableContentJpanelLayout.setHorizontalGroup(
            tableContentJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableContentJpanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tableContentJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteRecordsJbutton)
                    .addComponent(selectAllRowsJbutton)
                    .addComponent(deselectAllRowsJbutton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tableContentJpanelLayout.setVerticalGroup(
            tableContentJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableContentJpanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(tableContentJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tableContentJpanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(selectAllRowsJbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deselectAllRowsJbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteRecordsJbutton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addComponent(tableContentJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(showDataCountJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(selectTableJcomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(selectTableJcomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableContentJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showDataCountJlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectTableJcomboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectTableJcomboBoxActionPerformed
        
        fillTableContent();
    }//GEN-LAST:event_selectTableJcomboBoxActionPerformed

    private void fillTableContent(){
        
        String tableName = (String)selectTableJcomboBox.getSelectedItem();
        String columnNames[] = queryData.getColumnNames(tableName, "MaintainData");
        Object [][] tableContent = queryData.getTableContent(tableName);
        tableContentJtable.setModel(new MaintainDataTableModel(columnNames, tableContent));
        tableContentJtable.getModel().addTableModelListener(new MaintainDataTableModelListener());
        
        showDataCountJlabel.setText(tableContentJtable.getModel().getRowCount()+" Records Found");
        
        if(tableContentJtable.getModel().getRowCount() > 0){
            deleteRecordsJbutton.setVisible(true);
            deselectAllRowsJbutton.setVisible(true);
            selectAllRowsJbutton.setVisible(true);
            
        }else{
            deleteRecordsJbutton.setVisible(false);
            deselectAllRowsJbutton.setVisible(false);
            selectAllRowsJbutton.setVisible(false);
        }
        showDataCountJlabel.setVisible(true);
        tableContentJpanel.setVisible(true);
    }
    
    private void deleteRecordsJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRecordsJbuttonActionPerformed
        
        String tableName = (String)selectTableJcomboBox.getSelectedItem();
        
        MaintainDataTableModel maintainDataTableModel = (MaintainDataTableModel)tableContentJtable.getModel();
        int rowCount = maintainDataTableModel.getRowCount();
        
        int deleteCount = 0;
        String selctedIds = "";
        for (int i = 0; i < rowCount; i++) {
            boolean b = (Boolean)maintainDataTableModel.getValueAt(i, maintainDataTableModel.getColumnCount() - 1);
            if(b == true){
                String idToBeDeleted = (String)maintainDataTableModel.getValueAt(i, 0);
                selctedIds = selctedIds + idToBeDeleted +",";
                deleteCount++;
            }          
        }  
        if(deleteCount > 0){
            int confirmation = new GUIUtil().showConfirmDialogue("Are you sure, deleting these records also delete related records?", "Delete Confirmation", this);
            if(confirmation == 0){
                queryData.deleteRow(tableName, maintainDataTableModel.getColumnName(0), selctedIds.substring(0,selctedIds.length() - 1));
                fillTableContent();
                new GUIUtil().showPlainDialog("Records has been deleted successfully!", this);
            }
        }else{
            new GUIUtil().showPlainDialog("Please select records to delete!", this);
        }
        
        
    }//GEN-LAST:event_deleteRecordsJbuttonActionPerformed

    private void deselectAllRowsJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deselectAllRowsJbuttonActionPerformed
        
        MaintainDataTableModel maintainDataTableModel = (MaintainDataTableModel)tableContentJtable.getModel();
        int rowCount = maintainDataTableModel.getRowCount();
        
        for (int i = 0; i < rowCount; i++) {
                maintainDataTableModel.setValueAt(false, i, maintainDataTableModel.getColumnCount() - 1);
        }
    }//GEN-LAST:event_deselectAllRowsJbuttonActionPerformed

    private void selectAllRowsJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllRowsJbuttonActionPerformed
        
        MaintainDataTableModel maintainDataTableModel = (MaintainDataTableModel)tableContentJtable.getModel();
        int rowCount = maintainDataTableModel.getRowCount();
        
        for (int i = 0; i < rowCount; i++) {
                maintainDataTableModel.setValueAt(true, i, maintainDataTableModel.getColumnCount() - 1);
        }
    }//GEN-LAST:event_selectAllRowsJbuttonActionPerformed

    private class MaintainDataTableModelListener implements TableModelListener{

        @Override
        public void tableChanged(TableModelEvent e) {
            
            MaintainDataTableModel maintainDataTableModel = (MaintainDataTableModel)e.getSource();
            
            if(!"Delete".equals((String)maintainDataTableModel.getColumnName(e.getColumn()))){
                String tableName = (String)selectTableJcomboBox.getSelectedItem();
                String columnName = maintainDataTableModel.getColumnName(e.getColumn());
                String idColumnName = maintainDataTableModel.getColumnName(0);
                String value = (String)maintainDataTableModel.getValueAt(e.getFirstRow(), e.getColumn());
                int idToBeUpdated = Integer.valueOf((String)maintainDataTableModel.getValueAt(e.getFirstRow(), 0));

                queryData.updateRecord(idToBeUpdated, value, tableName, columnName, idColumnName);
                new GUIUtil().showPlainDialog("Value has been updated successfully", jCheckBox1);
            }
            
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteRecordsJbutton;
    private javax.swing.JButton deselectAllRowsJbutton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton selectAllRowsJbutton;
    private javax.swing.JComboBox selectTableJcomboBox;
    private javax.swing.JLabel showDataCountJlabel;
    private javax.swing.JPanel tableContentJpanel;
    private javax.swing.JTable tableContentJtable;
    // End of variables declaration//GEN-END:variables
}
